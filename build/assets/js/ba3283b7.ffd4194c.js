/*! For license information please see ba3283b7.ffd4194c.js.LICENSE.txt */
"use strict";(self.webpackChunkweb_totals=self.webpackChunkweb_totals||[]).push([[8425],{12961:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=s(85893),r=s(11151);const i={sidebar_position:2,title:"Question 11 - 20",comment:!0,tags:["Javascript"]},a=void 0,l={id:"javascripts/question-2",title:"Question 11 - 20",description:"Q11. What is the output?",source:"@site/questions/javascripts/question-2.md",sourceDirName:"javascripts",slug:"/javascripts/question-2",permalink:"/questions/javascripts/question-2",draft:!1,unlisted:!1,editUrl:"https://github.com/hunghg255/web-totals/tree/main/questions/javascripts/question-2.md",tags:[{label:"Javascript",permalink:"/questions/tags/javascript"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Question 11 - 20",comment:!0,tags:["Javascript"]},sidebar:"tutorialSidebar",previous:{title:"Question 1 - 10",permalink:"/questions/javascripts/question-1"},next:{title:"Question 21 - 30",permalink:"/questions/javascripts/question-3"}},o={},c=[{value:"Q11. What is the output?",id:"q11-what-is-the-output",level:3},{value:"Q12. What&#39;s the output?",id:"q12-whats-the-output",level:3},{value:"Q13. What are the three phases of event propagation?",id:"q13-what-are-the-three-phases-of-event-propagation",level:3},{value:"Q14. All object have prototypes.",id:"q14-all-object-have-prototypes",level:3},{value:"Q15. What&#39;s the output?",id:"q15-whats-the-output",level:3},{value:"Q16. What&#39;s the output?",id:"q16-whats-the-output",level:3},{value:"Q17. What&#39;s the output?",id:"q17-whats-the-output",level:3},{value:"Q18. What&#39;s the output?",id:"q18-whats-the-output",level:3},{value:"Q19. What&#39;s the output?",id:"q19-whats-the-output",level:3},{value:"Q20. What&#39;s the output?",id:"q20-whats-the-output",level:3}];function h(e){const n={code:"code",em:"em",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"q11-what-is-the-output",children:"Q11. What is the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\n\nconst member = new Person('Lydia', 'Hallie');\nPerson.getFullName = function () {\n  return `${this.firstName} ${this.lastName}`;\n};\n\nconsole.log(member.getFullName());\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: TypeError"}),"\n",(0,t.jsx)(n.li,{children:"B: SyntaxError"}),"\n",(0,t.jsx)(n.li,{children:"C: Lydia Hallie"}),"\n",(0,t.jsx)(n.li,{children:"D: undefined undefined"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: A"})})}),(0,t.jsxs)(n.p,{children:["In JavaScript, functions are objects, and therefore, the method ",(0,t.jsx)(n.code,{children:"getFullName"})," gets added to the constructor function object itself. For that reason, we can call ",(0,t.jsx)(n.code,{children:"Person.getFullName()"}),", but ",(0,t.jsx)(n.code,{children:"member.getFullName"})," throws a ",(0,t.jsx)(n.code,{children:"TypeError"}),"."]}),(0,t.jsx)(n.p,{children:"If you want a method to be available to all object instances, you have to add it to the prototype property:"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:"Person.prototype.getFullName = function () {\n  return `${this.firstName} ${this.lastName}`;\n};\n"})})]}),"\n",(0,t.jsx)(n.h3,{id:"q12-whats-the-output",children:"Q12. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function Person(firstName, lastName) {\n  this.firstName = firstName;\n  this.lastName = lastName;\n}\n\nconst lydia = new Person('Lydia', 'Hallie');\nconst sarah = Person('Sarah', 'Smith');\n\nconsole.log(lydia);\nconsole.log(sarah);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",'A: Person {firstName: "Lydia", lastName: "Hallie"} and undefined',"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",'B: Person {firstName: "Lydia", lastName: "Hallie"} and Person {firstName: "Sarah", lastName: "Smith"}',"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",'C: Person {firstName: "Lydia", lastName: "Hallie"} and {}',"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",'D: Person {firstName: "Lydia", lastName: "Hallie"} and ReferenceError',"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: A"})})}),(0,t.jsxs)(n.p,{children:["For ",(0,t.jsx)(n.code,{children:"sarah"}),", we didn't use the ",(0,t.jsx)(n.code,{children:"new"})," keyword. When using ",(0,t.jsx)(n.code,{children:"new"}),", ",(0,t.jsx)(n.code,{children:"this"})," refers to the new empty object we create. However, if you don't add ",(0,t.jsx)(n.code,{children:"new"}),", ",(0,t.jsx)(n.code,{children:"this"})," refers to the ",(0,t.jsx)(n.strong,{children:"global object"}),"!"]}),(0,t.jsxs)(n.p,{children:["We said that ",(0,t.jsx)(n.code,{children:"this.firstName"})," equals ",(0,t.jsx)(n.code,{children:'"Sarah"'})," and ",(0,t.jsx)(n.code,{children:"this.lastName"})," equals ",(0,t.jsx)(n.code,{children:'"Smith"'}),". What we actually did, is defining ",(0,t.jsx)(n.code,{children:"global.firstName = 'Sarah'"})," and ",(0,t.jsx)(n.code,{children:"global.lastName = 'Smith'"}),". ",(0,t.jsx)(n.code,{children:"sarah"})," itself is left ",(0,t.jsx)(n.code,{children:"undefined"}),", since we don't return a value from the ",(0,t.jsx)(n.code,{children:"Person"})," function."]})]}),"\n",(0,t.jsx)(n.h3,{id:"q13-what-are-the-three-phases-of-event-propagation",children:"Q13. What are the three phases of event propagation?"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n","A: Target > Capturing > Bubbling","\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n","B: Bubbling > Target > Capturing","\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n","C: Target > Bubbling > Capturing","\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n","D: Capturing > Target > Bubbling","\n"]}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: D"})})}),(0,t.jsxs)(n.p,{children:["During the ",(0,t.jsx)(n.strong,{children:"capturing"})," phase, the event goes through the ancestor elements down to the target element. It then reaches the ",(0,t.jsx)(n.strong,{children:"target"})," element, and ",(0,t.jsx)(n.strong,{children:"bubbling"})," begins."]}),(0,t.jsx)("img",{src:"https://i.imgur.com/N18oRgd.png",width:"200"})]}),"\n",(0,t.jsx)(n.h3,{id:"q14-all-object-have-prototypes",children:"Q14. All object have prototypes."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: true"}),"\n",(0,t.jsx)(n.li,{children:"B: false"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: B"})})}),(0,t.jsxs)(n.p,{children:["All objects have prototypes, except for the ",(0,t.jsx)(n.strong,{children:"base object"}),". The base object is the object created by the user, or an object that is created using the ",(0,t.jsx)(n.code,{children:"new"})," keyword. The base object has access to some methods and properties, such as ",(0,t.jsx)(n.code,{children:".toString"}),". This is the reason why you can use built-in JavaScript methods! All of such methods are available on the prototype. Although JavaScript can't find it directly on your object, it goes down the prototype chain and finds it there, which makes it accessible for you."]})]}),"\n",(0,t.jsx)(n.h3,{id:"q15-whats-the-output",children:"Q15. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function sum(a, b) {\n  return a + b;\n}\n\nsum(1, '2');\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: NaN"}),"\n",(0,t.jsx)(n.li,{children:"B: TypeError"}),"\n",(0,t.jsx)(n.li,{children:'C: "12"'}),"\n",(0,t.jsx)(n.li,{children:"D: 3"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: C"})})}),(0,t.jsxs)(n.p,{children:["JavaScript is a ",(0,t.jsx)(n.strong,{children:"dynamically typed language"}),": we don't specify what types certain variables are. Values can automatically be converted into another type without you knowing, which is called ",(0,t.jsx)(n.em,{children:"implicit type coercion"}),". ",(0,t.jsx)(n.strong,{children:"Coercion"})," is converting from one type into another."]}),(0,t.jsxs)(n.p,{children:["In this example, JavaScript converts the number ",(0,t.jsx)(n.code,{children:"1"})," into a string, in order for the function to make sense and return a value. During the addition of a numeric type (",(0,t.jsx)(n.code,{children:"1"}),") and a string type (",(0,t.jsx)(n.code,{children:"'2'"}),"), the number is treated as a string. We can concatenate strings like ",(0,t.jsx)(n.code,{children:'"Hello" + "World"'}),", so what's happening here is ",(0,t.jsx)(n.code,{children:'"1" + "2"'})," which returns ",(0,t.jsx)(n.code,{children:'"12"'}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"q16-whats-the-output",children:"Q16. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"let number = 0;\nconsole.log(number++);\nconsole.log(++number);\nconsole.log(number);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: 1, 1, 2"}),"\n",(0,t.jsx)(n.li,{children:"B: 1, 2, 2"}),"\n",(0,t.jsx)(n.li,{children:"C: 0, 2, 2"}),"\n",(0,t.jsx)(n.li,{children:"D: 0, 1, 2"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: C"})})}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"postfix"})," unary operator ",(0,t.jsx)(n.code,{children:"++"}),":"]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Returns the value (this returns ",(0,t.jsx)(n.code,{children:"0"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Increments the value (number is now ",(0,t.jsx)(n.code,{children:"1"}),")"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"prefix"})," unary operator ",(0,t.jsx)(n.code,{children:"++"}),":"]}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Increments the value (number is now ",(0,t.jsx)(n.code,{children:"2"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["Returns the value (this returns ",(0,t.jsx)(n.code,{children:"2"}),")"]}),"\n"]}),(0,t.jsxs)(n.p,{children:["This returns ",(0,t.jsx)(n.code,{children:"0 2 2"}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"q17-whats-the-output",children:"Q17. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function getPersonInfo(one, two, three) {\n  console.log(one);\n  console.log(two);\n  console.log(three);\n}\n\nconst person = 'Lydia';\nconst age = 21;\n\ngetPersonInfo`${person} is ${age} years old`;\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",'A: "Lydia" 21 ["", " is ", " years old"]',"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",'B: ["", " is ", " years old"] "Lydia" 21',"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",'C: "Lydia" ["", " is ", " years old"] 21',"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: B"})})}),(0,t.jsx)(n.p,{children:"If you use tagged template literals, the value of the first argument is always an array of the string values. The remaining arguments get the values of the passed expressions!"})]}),"\n",(0,t.jsx)(n.h3,{id:"q18-whats-the-output",children:"Q18. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function checkAge(data) {\n  if (data === { age: 18 }) {\n    console.log('You are an adult!');\n  } else if (data == { age: 18 }) {\n    console.log('You are still an adult.');\n  } else {\n    console.log(`Hmm.. You don't have an age I guess`);\n  }\n}\n\ncheckAge({ age: 18 });\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: You are an adult!"}),"\n",(0,t.jsx)(n.li,{children:"B: You are still an adult."}),"\n",(0,t.jsx)(n.li,{children:"C: Hmm.. You don't have an age I guess"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: C"})})}),(0,t.jsxs)(n.p,{children:["When testing equality, primitives are compared by their ",(0,t.jsx)(n.em,{children:"value"}),", while objects are compared by their ",(0,t.jsx)(n.em,{children:"reference"}),". JavaScript checks if the objects have a reference to the same location in memory."]}),(0,t.jsx)(n.p,{children:"The two objects that we are comparing don't have that: the object we passed as a parameter refers to a different location in memory than the object we used in order to check equality."}),(0,t.jsxs)(n.p,{children:["This is why both ",(0,t.jsx)(n.code,{children:"{ age: 18 } === { age: 18 }"})," and ",(0,t.jsx)(n.code,{children:"{ age: 18 } == { age: 18 }"})," return ",(0,t.jsx)(n.code,{children:"false"}),"."]})]}),"\n",(0,t.jsx)(n.h3,{id:"q19-whats-the-output",children:"Q19. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function getAge(...args) {\n  console.log(typeof args);\n}\n\ngetAge(21);\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'A: "number"'}),"\n",(0,t.jsx)(n.li,{children:'B: "array"'}),"\n",(0,t.jsx)(n.li,{children:'C: "object"'}),"\n",(0,t.jsx)(n.li,{children:'D: "NaN"'}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: C"})})}),(0,t.jsxs)(n.p,{children:["The rest parameter (",(0,t.jsx)(n.code,{children:"...args"}),') lets us "collect" all remaining arguments into an array. An array is an object, so ',(0,t.jsx)(n.code,{children:"typeof args"})," returns ",(0,t.jsx)(n.code,{children:'"object"'})]})]}),"\n",(0,t.jsx)(n.h3,{id:"q20-whats-the-output",children:"Q20. What's the output?"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"function getAge() {\n  'use strict';\n  age = 21;\n  console.log(age);\n}\n\ngetAge();\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A: 21"}),"\n",(0,t.jsx)(n.li,{children:"B: undefined"}),"\n",(0,t.jsx)(n.li,{children:"C: ReferenceError"}),"\n",(0,t.jsx)(n.li,{children:"D: TypeError"}),"\n"]}),"\n",(0,t.jsxs)(s,{children:[(0,t.jsx)("summary",{children:(0,t.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.em,{children:"Answer: C"})})}),(0,t.jsxs)(n.p,{children:["With ",(0,t.jsx)(n.code,{children:'"use strict"'}),", you can make sure that you don't accidentally declare global variables. We never declared the variable ",(0,t.jsx)(n.code,{children:"age"}),", and since we use ",(0,t.jsx)(n.code,{children:'"use strict"'}),", it will throw a reference error. If we didn't use ",(0,t.jsx)(n.code,{children:'"use strict"'}),", it would have worked, since the property ",(0,t.jsx)(n.code,{children:"age"})," would have gotten added to the global object."]})]})]})}function d(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},75251:(e,n,s)=>{var t=s(67294),r=Symbol.for("react.element"),i=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,l=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,o={key:!0,ref:!0,__self:!0,__source:!0};function c(e,n,s){var t,i={},c=null,h=null;for(t in void 0!==s&&(c=""+s),void 0!==n.key&&(c=""+n.key),void 0!==n.ref&&(h=n.ref),n)a.call(n,t)&&!o.hasOwnProperty(t)&&(i[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===i[t]&&(i[t]=n[t]);return{$$typeof:r,type:e,key:c,ref:h,props:i,_owner:l.current}}n.Fragment=i,n.jsx=c,n.jsxs=c},85893:(e,n,s)=>{e.exports=s(75251)},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>a});var t=s(67294);const r={},i=t.createContext(r);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);