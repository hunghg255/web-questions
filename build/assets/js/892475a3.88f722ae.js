/*! For license information please see 892475a3.88f722ae.js.LICENSE.txt */
"use strict";(self.webpackChunkweb_totals=self.webpackChunkweb_totals||[]).push([[7376],{76995:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>a,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var i=s(85893),r=s(11151);const c={sidebar_position:4,title:"Question 31 - 40",comment:!0,tags:["Javascript"]},t=void 0,l={id:"javascripts/question-4",title:"Question 31 - 40",description:"Q. 31. What is the event.target when clicking the button?",source:"@site/questions/javascripts/question-4.md",sourceDirName:"javascripts",slug:"/javascripts/question-4",permalink:"/questions/javascripts/question-4",draft:!1,unlisted:!1,editUrl:"https://github.com/hunghg255/web-totals/tree/main/questions/javascripts/question-4.md",tags:[{label:"Javascript",permalink:"/questions/tags/javascript"}],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Question 31 - 40",comment:!0,tags:["Javascript"]},sidebar:"tutorialSidebar",previous:{title:"Question 21 - 30",permalink:"/questions/javascripts/question-3"},next:{title:"Question 41 - 50",permalink:"/questions/javascripts/question-5"}},d={},h=[{value:"Q. 31. What is the event.target when clicking the button?",id:"q-31-what-is-the-eventtarget-when-clicking-the-button",level:3},{value:"Q. 32. When you click the paragraph, what&#39;s the logged output?",id:"q-32-when-you-click-the-paragraph-whats-the-logged-output",level:3},{value:"Q. 33. What&#39;s the output?",id:"q-33-whats-the-output",level:3},{value:"Q. 34. What&#39;s the output?",id:"q-34-whats-the-output",level:3},{value:"Q. 35. Which of these values are falsy?",id:"q-35-which-of-these-values-are-falsy",level:3},{value:"Q. 36. What&#39;s the output?",id:"q-36-whats-the-output",level:3},{value:"Q. 37. What&#39;s the output?",id:"q-37-whats-the-output",level:3},{value:"Q. 38. What&#39;s the output?",id:"q-38-whats-the-output",level:3},{value:"Q. 39. Everything in JavaScript is either a...",id:"q-39-everything-in-javascript-is-either-a",level:3},{value:"Q. 40. What&#39;s the output?",id:"q-40-whats-the-output",level:3}];function o(e){const n={code:"code",em:"em",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{Details:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"q-31-what-is-the-eventtarget-when-clicking-the-button",children:"Q. 31. What is the event.target when clicking the button?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<div onclick=\"console.log('first div')\">\n  <div onclick=\"console.log('second div')\">\n    <button onclick=\"console.log('button')\">Click!</button>\n  </div>\n</div>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A: Outer ",(0,i.jsx)(n.code,{children:"div"})]}),"\n",(0,i.jsxs)(n.li,{children:["B: Inner ",(0,i.jsx)(n.code,{children:"div"})]}),"\n",(0,i.jsxs)(n.li,{children:["C: ",(0,i.jsx)(n.code,{children:"button"})]}),"\n",(0,i.jsx)(n.li,{children:"D: An array of all nested elements."}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: C"})})}),(0,i.jsxs)(n.p,{children:["The deepest nested element that caused the event is the target of the event. You can stop bubbling by ",(0,i.jsx)(n.code,{children:"event.stopPropagation"})]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-32-when-you-click-the-paragraph-whats-the-logged-output",children:"Q. 32. When you click the paragraph, what's the logged output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<div onclick=\"console.log('div')\">\n  <p onclick=\"console.log('p')\">Click here!</p>\n</div>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A: ",(0,i.jsx)(n.code,{children:"p"})," ",(0,i.jsx)(n.code,{children:"div"})]}),"\n",(0,i.jsxs)(n.li,{children:["B: ",(0,i.jsx)(n.code,{children:"div"})," ",(0,i.jsx)(n.code,{children:"p"})]}),"\n",(0,i.jsxs)(n.li,{children:["C: ",(0,i.jsx)(n.code,{children:"p"})]}),"\n",(0,i.jsxs)(n.li,{children:["D: ",(0,i.jsx)(n.code,{children:"div"})]}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: A"})})}),(0,i.jsxs)(n.p,{children:["If we click ",(0,i.jsx)(n.code,{children:"p"}),", we see two logs: ",(0,i.jsx)(n.code,{children:"p"})," and ",(0,i.jsx)(n.code,{children:"div"}),". During event propagation, there are 3 phases: capturing, target, and bubbling. By default, event handlers are executed in the bubbling phase (unless you set ",(0,i.jsx)(n.code,{children:"useCapture"})," to ",(0,i.jsx)(n.code,{children:"true"}),"). It goes from the deepest nested element outwards."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-33-whats-the-output",children:"Q. 33. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const person = { name: 'Lydia' };\n\nfunction sayHi(age) {\n  return `${this.name} is ${age}`;\n}\n\nconsole.log(sayHi.call(person, 21));\nconsole.log(sayHi.bind(person, 21));\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A: ",(0,i.jsx)(n.code,{children:"undefined is 21"})," ",(0,i.jsx)(n.code,{children:"Lydia is 21"})]}),"\n",(0,i.jsxs)(n.li,{children:["B: ",(0,i.jsx)(n.code,{children:"function"})," ",(0,i.jsx)(n.code,{children:"function"})]}),"\n",(0,i.jsxs)(n.li,{children:["C: ",(0,i.jsx)(n.code,{children:"Lydia is 21"})," ",(0,i.jsx)(n.code,{children:"Lydia is 21"})]}),"\n",(0,i.jsxs)(n.li,{children:["D: ",(0,i.jsx)(n.code,{children:"Lydia is 21"})," ",(0,i.jsx)(n.code,{children:"function"})]}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: D"})})}),(0,i.jsxs)(n.p,{children:["With both, we can pass the object to which we want the ",(0,i.jsx)(n.code,{children:"this"})," keyword to refer to. However, ",(0,i.jsx)(n.code,{children:".call"})," is also ",(0,i.jsx)(n.em,{children:"executed immediately"}),"!"]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:".bind."})," returns a ",(0,i.jsx)(n.em,{children:"copy"})," of the function, but with a bound context! It is not executed immediately."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-34-whats-the-output",children:"Q. 34. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"function sayHi() {\n  return (() => 0)();\n}\n\nconsole.log(typeof sayHi());\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'A: "object"'}),"\n",(0,i.jsx)(n.li,{children:'B: "number"'}),"\n",(0,i.jsx)(n.li,{children:'C: "function"'}),"\n",(0,i.jsx)(n.li,{children:'D: "undefined"'}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: B"})})}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"sayHi"})," function returns the returned value of the immediately invoked function expression (IIFE). This function returned ",(0,i.jsx)(n.code,{children:"0"}),", which is type ",(0,i.jsx)(n.code,{children:'"number"'}),"."]}),(0,i.jsxs)(n.p,{children:["FYI: there are only 7 built-in types: ",(0,i.jsx)(n.code,{children:"null"}),", ",(0,i.jsx)(n.code,{children:"undefined"}),", ",(0,i.jsx)(n.code,{children:"boolean"}),", ",(0,i.jsx)(n.code,{children:"number"}),", ",(0,i.jsx)(n.code,{children:"string"}),", ",(0,i.jsx)(n.code,{children:"object"}),", and ",(0,i.jsx)(n.code,{children:"symbol"}),". ",(0,i.jsx)(n.code,{children:'"function"'})," is not a type, since functions are objects, it's of type ",(0,i.jsx)(n.code,{children:'"object"'}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-35-which-of-these-values-are-falsy",children:"Q. 35. Which of these values are falsy?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"0;\nnew Number(0);\n('');\n(' ');\nnew Boolean(false);\nundefined;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: 0, '', undefined"}),"\n",(0,i.jsx)(n.li,{children:"B: 0, new Number(0), '', new Boolean(false), undefined"}),"\n",(0,i.jsx)(n.li,{children:"C: 0, '', new Boolean(false), undefined"}),"\n",(0,i.jsx)(n.li,{children:"D: All of them are falsy"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: A"})})}),(0,i.jsx)(n.p,{children:"There are 8 falsy values:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"undefined"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"null"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"NaN"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"false"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"''"})," (empty string)"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"0"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"-0"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0n"})," (BigInt(0))"]}),"\n"]}),(0,i.jsxs)(n.p,{children:["Function constructors, like ",(0,i.jsx)(n.code,{children:"new Number"})," and ",(0,i.jsx)(n.code,{children:"new Boolean"})," are truthy."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-36-whats-the-output",children:"Q. 36. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"console.log(typeof typeof 1);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'A: "number"'}),"\n",(0,i.jsx)(n.li,{children:'B: "string"'}),"\n",(0,i.jsx)(n.li,{children:'C: "object"'}),"\n",(0,i.jsx)(n.li,{children:'D: "undefined"'}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: B"})})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"typeof 1"})," returns ",(0,i.jsx)(n.code,{children:'"number"'}),"."]}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:'typeof "number"'})," returns ",(0,i.jsx)(n.code,{children:'"string"'})]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-37-whats-the-output",children:"Q. 37. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const numbers = [1, 2, 3];\nnumbers[10] = 11;\nconsole.log(numbers);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: [1, 2, 3, null x 7, 11]"}),"\n",(0,i.jsx)(n.li,{children:"B: [1, 2, 3, 11]"}),"\n",(0,i.jsx)(n.li,{children:"C: [1, 2, 3, empty x 7, 11]"}),"\n",(0,i.jsx)(n.li,{children:"D: SyntaxError"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: C"})})}),(0,i.jsxs)(n.p,{children:['When you set a value to an element in an array that exceeds the length of the array, JavaScript creates something called "empty slots". These actually have the value of ',(0,i.jsx)(n.code,{children:"undefined"}),", but you will see something like:"]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"[1, 2, 3, empty x 7, 11]"})}),(0,i.jsx)(n.p,{children:"depending on where you run it (it's different for every browser, node, etc.)"})]}),"\n",(0,i.jsx)(n.h3,{id:"q-38-whats-the-output",children:"Q. 38. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"(() => {\n  let x, y;\n  try {\n    throw new Error();\n  } catch (x) {\n    (x = 1), (y = 2);\n    console.log(x);\n  }\n  console.log(x);\n  console.log(y);\n})();\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: 1 undefined 2"}),"\n",(0,i.jsx)(n.li,{children:"B: undefined undefined undefined"}),"\n",(0,i.jsx)(n.li,{children:"C: 1 1 2"}),"\n",(0,i.jsx)(n.li,{children:"D: 1 undefined undefined"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: A"})})}),(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"catch"})," block receives the argument ",(0,i.jsx)(n.code,{children:"x"}),". This is not the same ",(0,i.jsx)(n.code,{children:"x"})," as the variable when we pass arguments. This variable ",(0,i.jsx)(n.code,{children:"x"})," is block-scoped."]}),(0,i.jsxs)(n.p,{children:["Later, we set this block-scoped variable equal to ",(0,i.jsx)(n.code,{children:"1"}),", and set the value of the variable ",(0,i.jsx)(n.code,{children:"y"}),". Now, we log the block-scoped variable ",(0,i.jsx)(n.code,{children:"x"}),", which is equal to ",(0,i.jsx)(n.code,{children:"1"}),"."]}),(0,i.jsxs)(n.p,{children:["Outside of the ",(0,i.jsx)(n.code,{children:"catch"})," block, ",(0,i.jsx)(n.code,{children:"x"})," is still ",(0,i.jsx)(n.code,{children:"undefined"}),", and ",(0,i.jsx)(n.code,{children:"y"})," is ",(0,i.jsx)(n.code,{children:"2"}),". When we want to ",(0,i.jsx)(n.code,{children:"console.log(x)"})," outside of the ",(0,i.jsx)(n.code,{children:"catch"})," block, it returns ",(0,i.jsx)(n.code,{children:"undefined"}),", and ",(0,i.jsx)(n.code,{children:"y"})," returns ",(0,i.jsx)(n.code,{children:"2"}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-39-everything-in-javascript-is-either-a",children:"Q. 39. Everything in JavaScript is either a..."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: primitive or object"}),"\n",(0,i.jsx)(n.li,{children:"B: function or object"}),"\n",(0,i.jsx)(n.li,{children:"C: trick question! only objects"}),"\n",(0,i.jsx)(n.li,{children:"D: number or object"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: A"})})}),(0,i.jsx)(n.p,{children:"JavaScript only has primitive types and objects."}),(0,i.jsxs)(n.p,{children:["Primitive types are ",(0,i.jsx)(n.code,{children:"boolean"}),", ",(0,i.jsx)(n.code,{children:"null"}),", ",(0,i.jsx)(n.code,{children:"undefined"}),", ",(0,i.jsx)(n.code,{children:"bigint"}),", ",(0,i.jsx)(n.code,{children:"number"}),", ",(0,i.jsx)(n.code,{children:"string"}),", and ",(0,i.jsx)(n.code,{children:"symbol"}),"."]}),(0,i.jsxs)(n.p,{children:["What differentiates a primitive from an object is that primitives do not have any properties or methods; however, you'll note that ",(0,i.jsx)(n.code,{children:"'foo'.toUpperCase()"})," evaluates to ",(0,i.jsx)(n.code,{children:"'FOO'"})," and does not result in a ",(0,i.jsx)(n.code,{children:"TypeError"}),". This is because when you try to access a property or method on a primitive like a string, JavaScript will implicitly wrap the primitive type using one of the wrapper classes, i.e. ",(0,i.jsx)(n.code,{children:"String"}),", and then immediately discard the wrapper after the expression evaluates. All primitives except for ",(0,i.jsx)(n.code,{children:"null"})," and ",(0,i.jsx)(n.code,{children:"undefined"})," exhibit this behaviour."]})]}),"\n",(0,i.jsx)(n.h3,{id:"q-40-whats-the-output",children:"Q. 40. What's the output?"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"const arr = [\n  [0, 1],\n  [2, 3],\n];\n\narr.reduce(\n  (acc, cur) => {\n    return acc.concat(cur);\n  },\n  [1, 2],\n);\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A: [0, 1, 2, 3, 1, 2]"}),"\n",(0,i.jsx)(n.li,{children:"B: [6, 1, 2]"}),"\n",(0,i.jsx)(n.li,{children:"C: [1, 2, 0, 1, 2, 3]"}),"\n",(0,i.jsx)(n.li,{children:"D: [1, 2, 6]"}),"\n"]}),"\n",(0,i.jsxs)(s,{children:[(0,i.jsx)("summary",{children:(0,i.jsx)("b",{children:"\ud83d\udca1 Answer"})}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.em,{children:"Answer: C"})})}),(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"[1, 2]"})," is our initial value. This is the value we start with, and the value of the very first ",(0,i.jsx)(n.code,{children:"acc"}),". During the first round, ",(0,i.jsx)(n.code,{children:"acc"})," is ",(0,i.jsx)(n.code,{children:"[1,2]"}),", and ",(0,i.jsx)(n.code,{children:"cur"})," is ",(0,i.jsx)(n.code,{children:"[0, 1]"}),". We concatenate them, which results in ",(0,i.jsx)(n.code,{children:"[1, 2, 0, 1]"}),"."]}),(0,i.jsxs)(n.p,{children:["Then, ",(0,i.jsx)(n.code,{children:"[1, 2, 0, 1]"})," is ",(0,i.jsx)(n.code,{children:"acc"})," and ",(0,i.jsx)(n.code,{children:"[2, 3]"})," is ",(0,i.jsx)(n.code,{children:"cur"}),". We concatenate them, and get ",(0,i.jsx)(n.code,{children:"[1, 2, 0, 1, 2, 3]"})]})]})]})}function a(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},75251:(e,n,s)=>{var i=s(67294),r=Symbol.for("react.element"),c=Symbol.for("react.fragment"),t=Object.prototype.hasOwnProperty,l=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,d={key:!0,ref:!0,__self:!0,__source:!0};function h(e,n,s){var i,c={},h=null,o=null;for(i in void 0!==s&&(h=""+s),void 0!==n.key&&(h=""+n.key),void 0!==n.ref&&(o=n.ref),n)t.call(n,i)&&!d.hasOwnProperty(i)&&(c[i]=n[i]);if(e&&e.defaultProps)for(i in n=e.defaultProps)void 0===c[i]&&(c[i]=n[i]);return{$$typeof:r,type:e,key:h,ref:o,props:c,_owner:l.current}}n.Fragment=c,n.jsx=h,n.jsxs=h},85893:(e,n,s)=>{e.exports=s(75251)},11151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>t});var i=s(67294);const r={},c=i.createContext(r);function t(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);