{
  "pluginId": "issues",
  "version": "current",
  "label": "Next",
  "banner": null,
  "badge": false,
  "noIndex": false,
  "className": "docs-version-current",
  "isLast": true,
  "docsSidebars": {
    "tutorialSidebar": [
      {
        "type": "link",
        "label": "Issues",
        "href": "/issues/",
        "docId": "README",
        "unlisted": false
      },
      {
        "type": "category",
        "label": "Javascript",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Delay without setTimeout",
            "href": "/issues/javascripts/delay-without-set-timeout",
            "docId": "javascripts/delay-without-set-timeout",
            "unlisted": false
          },
          {
            "type": "category",
            "label": "1 Line of code",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Random",
                "href": "/issues/javascripts/1loc/random",
                "docId": "javascripts/1loc/random",
                "unlisted": false
              }
            ]
          },
          {
            "type": "link",
            "label": "Split Text Utils",
            "href": "/issues/javascripts/split-text-utils",
            "docId": "javascripts/split-text-utils",
            "unlisted": false
          },
          {
            "type": "category",
            "label": "Sort",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Sleep Sort",
                "href": "/issues/javascripts/sort/sleep-sort",
                "docId": "javascripts/sort/sleep-sort",
                "unlisted": false
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "label": "Reactjs",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "category",
            "label": "Custom Hook",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "useStateProxy",
                "href": "/issues/reactjs/custom-hook/use-state-proxy",
                "docId": "reactjs/custom-hook/use-state-proxy",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useToggle",
                "href": "/issues/reactjs/custom-hook/use-toggle",
                "docId": "reactjs/custom-hook/use-toggle",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useTimeout",
                "href": "/issues/reactjs/custom-hook/use-timeout",
                "docId": "reactjs/custom-hook/use-timeout",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useFetch",
                "href": "/issues/reactjs/custom-hook/use-fetch",
                "docId": "reactjs/custom-hook/use-fetch",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useClickOutside",
                "href": "/issues/reactjs/custom-hook/use-click-outside",
                "docId": "reactjs/custom-hook/use-click-outside",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useCountDown",
                "href": "/issues/reactjs/custom-hook/use-count-down",
                "docId": "reactjs/custom-hook/use-count-down",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useMediaQuery",
                "href": "/issues/reactjs/custom-hook/use-media-query",
                "docId": "reactjs/custom-hook/use-media-query",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useWindowSize",
                "href": "/issues/reactjs/custom-hook/use-window-size",
                "docId": "reactjs/custom-hook/use-window-size",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useSize",
                "href": "/issues/reactjs/custom-hook/use-size",
                "docId": "reactjs/custom-hook/use-size",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useGeolocation",
                "href": "/issues/reactjs/custom-hook/use-geolocation",
                "docId": "reactjs/custom-hook/use-geolocation",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useDebounce",
                "href": "/issues/reactjs/custom-hook/use-debounce",
                "docId": "reactjs/custom-hook/use-debounce",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useDeepEffect",
                "href": "/issues/reactjs/custom-hook/use-deep-effect",
                "docId": "reactjs/custom-hook/use-deep-effect",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "usePrevious",
                "href": "/issues/reactjs/custom-hook/use-previous",
                "docId": "reactjs/custom-hook/use-previous",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useMergeRefs",
                "href": "/issues/reactjs/custom-hook/use-merge-ref",
                "docId": "reactjs/custom-hook/use-merge-ref",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useMemoByObjectVariables",
                "href": "/issues/reactjs/custom-hook/useMemoByObjectVariables",
                "docId": "reactjs/custom-hook/useMemoByObjectVariables",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useDelayedState",
                "href": "/issues/reactjs/custom-hook/useDelayedState",
                "docId": "reactjs/custom-hook/useDelayedState",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "useFadeEffect",
                "href": "/issues/reactjs/custom-hook/useFadeEffect",
                "docId": "reactjs/custom-hook/useFadeEffect",
                "unlisted": false
              }
            ]
          },
          {
            "type": "category",
            "label": "State management",
            "collapsible": true,
            "collapsed": true,
            "items": [
              {
                "type": "link",
                "label": "Context API",
                "href": "/issues/reactjs/state-management/context",
                "docId": "reactjs/state-management/context",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Context API Faster",
                "href": "/issues/reactjs/state-management/context-fast",
                "docId": "reactjs/state-management/context-fast",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Redux",
                "href": "/issues/reactjs/state-management/redux",
                "docId": "reactjs/state-management/redux",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Recoil",
                "href": "/issues/reactjs/state-management/recoil",
                "docId": "reactjs/state-management/recoil",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Jotai",
                "href": "/issues/reactjs/state-management/jotai",
                "docId": "reactjs/state-management/jotai",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Zustand",
                "href": "/issues/reactjs/state-management/zustand",
                "docId": "reactjs/state-management/zustand",
                "unlisted": false
              },
              {
                "type": "link",
                "label": "Valtio",
                "href": "/issues/reactjs/state-management/valtio",
                "docId": "reactjs/state-management/valtio",
                "unlisted": false
              }
            ]
          }
        ]
      },
      {
        "type": "category",
        "label": "RC Component Styles",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "RC Select",
            "href": "/issues/rc-style/rc-select",
            "docId": "rc-style/rc-select",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "RC Picker",
            "href": "/issues/rc-style/rc-picker",
            "docId": "rc-style/rc-picker",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "RC Dialog",
            "href": "/issues/rc-style/rc-dialog",
            "docId": "rc-style/rc-dialog",
            "unlisted": false
          },
          {
            "type": "link",
            "label": "RC Tooltip",
            "href": "/issues/rc-style/rc-tooltip",
            "docId": "rc-style/rc-tooltip",
            "unlisted": false
          }
        ]
      },
      {
        "type": "category",
        "label": "React Native",
        "collapsible": true,
        "collapsed": true,
        "items": [
          {
            "type": "link",
            "label": "Test",
            "href": "/issues/react-native/test",
            "docId": "react-native/test",
            "unlisted": false
          }
        ]
      }
    ]
  },
  "docs": {
    "javascripts/1loc/random": {
      "id": "javascripts/1loc/random",
      "title": "Random",
      "description": "Generate a random integer in given range",
      "sidebar": "tutorialSidebar"
    },
    "javascripts/delay-without-set-timeout": {
      "id": "javascripts/delay-without-set-timeout",
      "title": "Delay without setTimeout",
      "description": "This is a delay function without setTimeout and promise in javascript",
      "sidebar": "tutorialSidebar"
    },
    "javascripts/sort/sleep-sort": {
      "id": "javascripts/sort/sleep-sort",
      "title": "Sleep Sort",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "javascripts/split-text-utils": {
      "id": "javascripts/split-text-utils",
      "title": "Split Text Utils",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "rc-style/rc-dialog": {
      "id": "rc-style/rc-dialog",
      "title": "RC Dialog",
      "description": "Install rc-dialog component",
      "sidebar": "tutorialSidebar"
    },
    "rc-style/rc-picker": {
      "id": "rc-style/rc-picker",
      "title": "RC Picker",
      "description": "Install rc-picker component",
      "sidebar": "tutorialSidebar"
    },
    "rc-style/rc-select": {
      "id": "rc-style/rc-select",
      "title": "RC Select",
      "description": "Install rc-select component",
      "sidebar": "tutorialSidebar"
    },
    "rc-style/rc-tooltip": {
      "id": "rc-style/rc-tooltip",
      "title": "RC Tooltip",
      "description": "Install rc-tooltip component",
      "sidebar": "tutorialSidebar"
    },
    "react-native/test": {
      "id": "react-native/test",
      "title": "Test",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-click-outside": {
      "id": "reactjs/custom-hook/use-click-outside",
      "title": "useClickOutside",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-count-down": {
      "id": "reactjs/custom-hook/use-count-down",
      "title": "useCountDown",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-debounce": {
      "id": "reactjs/custom-hook/use-debounce",
      "title": "useDebounce",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-deep-effect": {
      "id": "reactjs/custom-hook/use-deep-effect",
      "title": "useDeepEffect",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-fetch": {
      "id": "reactjs/custom-hook/use-fetch",
      "title": "useFetch",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-geolocation": {
      "id": "reactjs/custom-hook/use-geolocation",
      "title": "useGeolocation",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-media-query": {
      "id": "reactjs/custom-hook/use-media-query",
      "title": "useMediaQuery",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-merge-ref": {
      "id": "reactjs/custom-hook/use-merge-ref",
      "title": "useMergeRefs",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-previous": {
      "id": "reactjs/custom-hook/use-previous",
      "title": "usePrevious",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-size": {
      "id": "reactjs/custom-hook/use-size",
      "title": "useSize",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-state-proxy": {
      "id": "reactjs/custom-hook/use-state-proxy",
      "title": "useStateProxy",
      "description": "This is a custom hook to mutate state in reactjs",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-timeout": {
      "id": "reactjs/custom-hook/use-timeout",
      "title": "useTimeout",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-toggle": {
      "id": "reactjs/custom-hook/use-toggle",
      "title": "useToggle",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/use-window-size": {
      "id": "reactjs/custom-hook/use-window-size",
      "title": "useWindowSize",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/useDelayedState": {
      "id": "reactjs/custom-hook/useDelayedState",
      "title": "useDelayedState",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/useFadeEffect": {
      "id": "reactjs/custom-hook/useFadeEffect",
      "title": "useFadeEffect",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/custom-hook/useMemoByObjectVariables": {
      "id": "reactjs/custom-hook/useMemoByObjectVariables",
      "title": "useMemoByObjectVariables",
      "description": "",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/context": {
      "id": "reactjs/state-management/context",
      "title": "Context API",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/context-fast": {
      "id": "reactjs/state-management/context-fast",
      "title": "Context API Faster",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/jotai": {
      "id": "reactjs/state-management/jotai",
      "title": "Jotai",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/recoil": {
      "id": "reactjs/state-management/recoil",
      "title": "Recoil",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/redux": {
      "id": "reactjs/state-management/redux",
      "title": "Redux",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/valtio": {
      "id": "reactjs/state-management/valtio",
      "title": "Valtio",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "reactjs/state-management/zustand": {
      "id": "reactjs/state-management/zustand",
      "title": "Zustand",
      "description": "Demo",
      "sidebar": "tutorialSidebar"
    },
    "README": {
      "id": "README",
      "title": "Issues",
      "description": "This is Issues",
      "sidebar": "tutorialSidebar"
    }
  }
}